@react-native-async-storage/async-storage'　DB検討
●方法１
DB{					// DB は async-storageの管理ディレクトリを想定
	Data:{ 
		fileName1: { … },
		fileName2: { … },
	}
}
　- 特徴 
　　・Data オブジェクトで全セーブデータを管理。
　　・Dataをまるごと読み出す必要があり、時間がかかるかも？
　　・一度に扱うデータ単位が大きくなるので、処理に失敗したとき全データを
　　　失うかもしれないという懸念あり。
　- Read処理
　　・ Dataをオブジェクトに読み出し、”Object.keys”で
　　　ファイル名の一覧を取得。
　- Write処理
　　・読みだしたDataオブジェクトにセーブデータ(imgObj)を追加し、
　　　Dataオブジェクトを書き込み。

●方法２
DB{					// DB は async-storageの管理ディレクトリを想定
	List: { ‘fileName1’, ‘fileName2’ },
	fileName1: {…},
	fileName2: {…}
}
　- 特徴
　　・ファイル名のリストデータ”List”を持つ。
　　・セーブデータのファイル名をkeyとして追加する。
　　・List を読み出し必要なデータを選択できるので、必要なデータのみ
　　　読み書きが可能。
　　・一度に扱うデータ単位が少ないので、処理失敗時に全データを失うような
　　　リスクが少ない。
　- Read処理
　　・リストデータ(List)を読み出し、ユーザが任意セーブデータのファイル名を選択。
　　　ファイル名をkeyに、セーブデータを読み出し。
　- Write処理
　　・ファイル名をリストデータに追加し、Listを更新。
　　・ファイル名をkeyにデータ書き込み。

  - 実装（シーケンス）
　　・List:{}を読み出し
　　・List:{}が存在しない場合、オブジェクトを作成
　　・List:{}にfileNameを登録
　　・fileNameをkeyにimgObjを記録
